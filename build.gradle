plugins {
    id "dev.architectury.loom" version "1.3-SNAPSHOT"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = archives_base_name
version = mod_version
group = maven_group

loom {
    accessWidenerPath = file("src/main/resources/animatica.accesswidener")
    silentMojangMappingsLicense()
    forge {
        convertAccessWideners = true
        mixinConfigs = [
            "animatica.mixins.json"
        ]
    }
    mixin.defaultRefmapName.set("animatica.refmap.json")
}

repositories {
    maven { url 'https://jitpack.io' }
    maven {
        name 'ParchmentMC'
        url 'https://maven.parchmentmc.org'
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${forge_version}"
    modImplementation("curse.maven:embeddium-908741:4803825")
    modImplementation("maven.modrinth:potacore:0.0.8")
    modImplementation("maven.modrinth:potacore:0.0.8:universal-sources")
    modImplementation("maven.modrinth:potacore:0.0.8:universal-javadoc")
}

processResources {
    inputs.property "version", project.version
    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(8)
}

jar {
    manifest {
        attributes([
                "Implementation-Title"    : name,
                "Implementation-Version"  : mod_version,
                "Implementation-Vendor"   : mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
